<!--
We have decided to build the entire table server side
But we could use ajax approach: http://www.datatables.net/examples/data_sources/ajax.html
Just modify the campaigns_controller#user_campaigns to respond to json in addition to html
The html response would go to user_campaigns,html.erbs usual which includes this partial
This partial will instead of building out the entire table, will build only the header and footer
And make an ajax call to user_campaigns which would then return the json
//Something like:
def user_campaigns
    respond_to do |format|
      format.html  # user_campaigns.html.erb
      format.json  { render :json => Campaign.where(user_id: current_user.id)}
    end

  end

  See http://bootsnipp.com/snippets/featured/striped-table-30 for style used in Edit and Delete button links.
-->
<table id="user_campaigns" cellspacing="0" width="100%" class="table striped">
  <thead>
  <tr>
    <th>Title</th>
    <th>Excerpt</th>
    <th>Summary</th>
    <th>Actions</th>
  </tr>
  </thead>
  <% @campaigns.each do |campaign| %>
      <tr>
        <td><%= campaign.title %></td>
        <td><span title="<%= campaign.excerpt %>"><%= campaign.excerpt[0..30].gsub(/\s\w+\s*$/, '...')%></span></td>
        <td><span title="<%= campaign.summary%>"><%= campaign.summary[0..30].gsub(/\s\w+\s*$/, '...') %></span></td>
        <td><a class='btn btn-info btn-xs' href="#"><span class="glyphicon glyphicon-edit"></span> Edit</a>
          <%= link_to raw('<span class="glyphicon glyphicon-remove"></span> Del'), campaign_path(campaign), :method => :delete, 'data-type' => :json, :remote => true, :confirm => 'Are you sure?', :class => 'btn btn-danger btn-xs campaign-delete-link'%>
        </td>
      </tr>
  <% end %>
</table>